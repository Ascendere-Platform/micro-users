name: Deploy to GKE

on:
  workflow_dispatch:
    # Enable manual run
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: convocatoria-ascendere
  GKE_ZONE: us-central1 
  DEPLOYMENT_NAME: micro-users-deployment

jobs:

  push_to_registry:
    name: Push Docker image to Dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: '${{ secrets.DOCKER_USERNAME }}/micro_users'

  setup-and-deploy:
    name: Setup and Deploy
    needs: push_to_registry
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Agregar Helm Repo
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update

    - name: Instalar NGINX Ingress
      run: helm install stable/nginx-ingress --set controller.service.loadBalancerIP="34.132.41.100",rbac.create=true --generate-name

    - name: Get GKE Credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kustomize build . | kubectl apply -f -
        kubectl patch deployment $DEPLOYMENT_NAME -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
        
        kubectl apply -f ingress.yaml

        kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/v0.13.0/deploy/manifests/00-crds.yaml
        kubectl create namespace cert-manager
        helm repo add jetstack https://charts.jetstack.io
        helm repo update
        helm install \ cert-manager \ --namespace cert-manager \ --version v0.13.0 \ jetstack/cert-manager
        cat letsencrypt-issuer.yaml | sed -e "s/email: ''/email: $EMAIL/g" | kubectl apply -f-

        kubectl apply -f ingress-tls.yaml
        kubectl describe ingress esp-ingress

        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl patch configmap nginx-configuration -n ingress-nginx -p "$(cat nginx-configuration-configmap-patch.yaml)"
        kubectl get services -o wide
